-- Delete existing database
DROP TRIGGER IF EXISTS trg_increment_number_stu;
DROP TRIGGER IF EXISTS trg_decrement_number_stu;

USE ENGLISH_CENTER_DATABASE;
DROP DATABASE ENGLISH_CENTER_DATABASE;

-- Create new database
CREATE DATABASE ENGLISH_CENTER_DATABASE;
USE ENGLISH_CENTER_DATABASE;

-- Create PERSON table
CREATE TABLE PERSON (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100),
    EMAIL VARCHAR(100) UNIQUE,
    PHONE_NUMBER VARCHAR(15),
    DATE_OF_BIRTH DATE,
    ROLE ENUM('STUDENT', 'STAFF') DEFAULT 'STUDENT',
    PASSWORD VARCHAR(255)
);

CREATE TABLE PADLET (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255),
    CONTENT TEXT,
    CREATETIME DATETIME,
    OWNERID INT,
    FOREIGN KEY (OWNERID) REFERENCES PERSON(ID)
);

CREATE TABLE MEDIAFILE (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOTEID INT,
    FILENAME VARCHAR(255),
    TYPE VARCHAR(100),
    FILEPATH VARCHAR(500),
    FOREIGN KEY (NOTEID) REFERENCES PADLET(ID) ON DELETE CASCADE
);

-- Create STUDENT table
CREATE TABLE STUDENT (
    ID INT,
    ENROLL_DATE DATE,
    PRIMARY KEY (ID),
    FOREIGN KEY (ID) REFERENCES PERSON(ID)
);

-- Create STAFF table
CREATE TABLE STAFF (
    ID INT PRIMARY KEY,
    HIRE_DAY DATE,
    STAFF_TYPE ENUM('TEACHER', 'ADMIN', 'ACCOUNTANT'),
    FOREIGN KEY (ID) REFERENCES PERSON(ID)
);

-- Create COURSE table
CREATE TABLE COURSE (
    COURSE_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    PRICE DECIMAL(12, 0) NOT NULL DEFAULT 0,
    DESCRIPTION TEXT,
    START_DATE DATE,
    END_DATE DATE,
    MIN_STU INT,
    MAX_STU INT,
    NUMBER_STU INT DEFAULT 0
);

-- CATEGORY table
CREATE TABLE CATEGORY (
    cate_id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT
);

-- COURSE_CATEGORY join table
CREATE TABLE COURSE_CATEGORY (
    course_id INT,
    cate_id VARCHAR(30),
    PRIMARY KEY (course_id, cate_id),
    FOREIGN KEY (course_id) REFERENCES COURSE(course_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (cate_id) REFERENCES CATEGORY(cate_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-- Create TUITION table
CREATE TABLE TUITION (
    T_ID INT PRIMARY KEY AUTO_INCREMENT,
    PRICE DECIMAL(12, 0) NOT NULL,
    TYPE ENUM('UNPAID', 'CARD', 'TRANSFER', 'CASH') NOT NULL,
    DESCRIPTION TEXT,
    PAID_DATE DATE DEFAULT NULL,
    STATUS ENUM('UNPAID', 'PAID', 'DEFERRED') DEFAULT 'UNPAID'
);

-- Create STUDENT_COURSE table
CREATE TABLE STUDENT_COURSE (
    STUDENT_ID INT NOT NULL,
    COURSE_ID INT NOT NULL,
    PAYMENT_ID INT,
    PRIMARY KEY (STUDENT_ID, COURSE_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE,
    FOREIGN KEY (PAYMENT_ID) REFERENCES TUITION(T_ID)
);

-- Create TEACHER_COURSE table
CREATE TABLE TEACHER_COURSE (
    TEACHER_ID INT,
    COURSE_ID INT,
    ROLE ENUM('LECTURER', 'ASSISTANT') NOT NULL,
    PRIMARY KEY (TEACHER_ID, COURSE_ID),
    FOREIGN KEY (TEACHER_ID) REFERENCES STAFF(ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE
);

-- Create ASSIGNMENT table
CREATE TABLE ASSIGNMENT (
    AS_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    FILENAME VARCHAR(255),
    FILE VARCHAR(255), -- file link
    START_DATE DATETIME,
    END_DATE DATETIME,
    COURSE_ID INT,
    NUM_SUBMISSION INT NOT NULL DEFAULT 0,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE
);

-- Create DOCUMENT table
CREATE TABLE DOCUMENT (
    DOC_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    FILENAME VARCHAR(255),
    FILE VARCHAR(255),  -- file link
    COURSE_ID INT,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE
);

-- Create SUBMITION table
CREATE TABLE SUBMITION (
    STUDENT_ID INT,
    AS_ID INT,
    SUBMIT_DATE DATETIME,
    DESCRIPTION TEXT,
    FILENAME VARCHAR(255),
    FILE VARCHAR(255),  
    SCORE DECIMAL(5,2) DEFAULT NULL,  
    PRIMARY KEY (STUDENT_ID, AS_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (AS_ID) REFERENCES ASSIGNMENT(AS_ID) ON DELETE CASCADE
);

ALTER TABLE PADLET ADD COLUMN COLOR VARCHAR(20) DEFAULT '#ffffff';
ALTER TABLE MEDIAFILE ADD COLUMN MEDIATYPE VARCHAR(50) DEFAULT 'attachment';
