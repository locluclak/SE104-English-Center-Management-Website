USE ENGLISH_CENTER_DATABASE;

DROP DATABASE ENGLISH_CENTER_DATABASE;

CREATE DATABASE ENGLISH_CENTER_DATABASE;
USE ENGLISH_CENTER_DATABASE;

CREATE TABLE PERSON (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100),
    EMAIL VARCHAR(100) UNIQUE,
    PHONE_NUMBER VARCHAR(15),
    DATE_OF_BIRTH DATE,
    ROLE ENUM('STUDENT', 'STAFF') DEFAULT 'STUDENT',
    PASSWORD VARCHAR(255)
);

CREATE TABLE STUDENT (
    ID INT,
    ENROLL_DATE DATE,
    PRIMARY KEY (ID),
    FOREIGN KEY (ID) REFERENCES PERSON(ID)
);

CREATE TABLE STAFF (
    ID INT PRIMARY KEY,
    HIRE_DAY DATE,
    STAFF_TYPE ENUM('TEACHER', 'ADMIN', 'ACCOUNTANT'),
    FOREIGN KEY (ID) REFERENCES PERSON(ID)
);

CREATE TABLE COURSE (
    COURSE_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    START_DATE DATE,
    END_DATE DATE,
    MIN_STU INT,
    MAX_STU INT
);

CREATE TABLE TUITION (
    T_ID INT PRIMARY KEY AUTO_INCREMENT,
    PRICE DECIMAL(12, 0) NOT NULL,
    TYPE ENUM('UNPAID', 'CARD', 'TRANSFER', 'CASH') NOT NULL,
    DESCRIPTION TEXT,
    STATUS ENUM('UNPAID', 'PAID', 'DEFERRED') DEFAULT 'UNPAID'
);

CREATE TABLE STUDENT_COURSE (
    STUDENT_ID INT,
    COURSE_ID INT,
    PAYMENT_ID INT,
    PRIMARY KEY (STUDENT_ID, COURSE_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
    FOREIGN KEY (PAYMENT_ID) REFERENCES TUITION(T_ID)
);

CREATE TABLE TEACHER_COURSE (
    TEACHER_ID INT,
    COURSE_ID INT,
    ROLE ENUM('LECTURER', 'ASSISTANT') NOT NULL,
    PRIMARY KEY (TEACHER_ID, COURSE_ID),
    FOREIGN KEY (TEACHER_ID) REFERENCES STAFF(ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID)
);

CREATE TABLE ASSIGNMENT (
    AS_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    FILE VARCHAR(255), -- link
    START_DATE DATETIME,
    END_DATE DATETIME,
    COURSE_ID INT,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID)
);

CREATE TABLE DOCUMENT (
    DOC_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    FILE VARCHAR(255),  -- link
    COURSE_ID INT,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID)
);

CREATE TABLE SUBMITION (
    STUDENT_ID INT,
    AS_ID INT,
    SUBMIT_DATE DATETIME,
    DESCRIPTION TEXT,
    FILE VARCHAR(255),  
    SCORE DECIMAL(5,2),  
    PRIMARY KEY (STUDENT_ID, AS_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (AS_ID) REFERENCES ASSIGNMENT(AS_ID)
);